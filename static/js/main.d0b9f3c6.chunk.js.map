{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","robot","id","name","email","username","className","src","alt","CardList","cardsArray","robots","map","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","prevState","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAaeA,EAXF,SAAC,GAA8C,IAAD,IAA3CC,MAASC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,KAAgBC,GAAc,EAAxBC,SAAwB,EAAdD,OAE3C,OACE,sBAAKE,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BL,EAA1B,YAAwCM,IAAI,kBACpD,6BAAKL,IACL,4BAAIC,QCKKK,EAVE,SAAC,GAAgB,IAI1BC,EAJyB,EAAbC,OAIQC,KAAI,SAACX,GAC7B,OAAO,cAAC,EAAD,CAAMA,MAAOA,GAAYA,EAAMC,OAExC,OAAO,8BAAMQ,KCAAG,EARG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKT,UAAU,MAAf,SACE,uBAAOA,UAAU,mCAAmCU,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCW/FI,EAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCTQC,G,wDACnB,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAQnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,8EAEFG,KAAKX,MAAMK,a,GAjBqBQ,cCsD5BC,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAkBFC,eAAiB,SAACC,GAChB,EAAKJ,UAAS,SAACK,GAAD,MAAgB,CAAEvB,YAAasB,EAAME,OAAOC,WAlB1D,EAAKZ,MAAQ,CACXhB,OAAQ,GACRG,YAAa,IAJH,E,qDAWd,WAAqB,IAAD,OAGlB0B,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBAO7C,WAAS,MAEyBb,KAAKJ,MAA7BhB,EAFD,EAECA,OAAQG,EAFT,EAESA,YACV+B,EAAiBlC,EAAOmC,QAAO,SAAC7C,GACpC,OAAOA,EAAME,KAAK4C,cAAcC,SAASlC,EAAYiC,kBAGvD,OAAQpC,EAAOsC,OAGb,sBAAK3C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,WAPxB,6C,GAhCYZ,a,MCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d0b9f3c6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({ robot: { id, name, username, email } }) => {\n  // console.log(name)\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"a mecha-manny\" />\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n  // if (true) {\n  //   throw new Error('boop....')\n  // }\n  const cardsArray = robots.map((robot) => {\n    return <Card robot={robot} key={robot.id} />\n  })\n  return <div>{cardsArray}</div>\n}\n\nexport default CardList\n","import React from 'react'\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robots\" onChange={searchChange} />\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '1px solid black',\n        height: '500px'\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll\n","import React, { Component } from 'react'\n\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  // this is like the try/catch where if anything errors out, it will run this life cycle hook\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Whoops, looks like our robots have revolted.</h1>\n    }\n    return this.props.children\n  }\n}\n","import React, { Component } from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\n\n// import { robots } from './data/robots'\nimport './App.css'\nimport ErrorBoundary from '../components/ErrorBoundary'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchField: ''\n    }\n    // console.log('constructor triggers')\n\n    // this.onSearchChange = this.onSearchChange.bind(this)\n  }\n\n  componentDidMount() {\n    // console.log('component mounted!!')\n    // since fetch isn't attached to anything, it's actually become part of the window object (window.fetch)\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }))\n  }\n\n  onSearchChange = (event) => {\n    this.setState((prevState) => ({ searchField: event.target.value }))\n  }\n\n  render() {\n    // console.log('boom! render!')\n    const { robots, searchField } = this.state\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'tachyons'\n\nimport App from './containers/App'\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n//\n"],"sourceRoot":""}